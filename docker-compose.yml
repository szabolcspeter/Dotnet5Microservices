# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  
  basketdb:
    container_name: basketdb
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  discountdb:
    container_name: discountdb
    image: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  orderdb:
    container_name: orderdb
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
        SA_PASSWORD: "SqlServer12345678"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
        - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalogapi:
    container_name: catalogapi
    image: catalogapi
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - "8000:80"

  basketapi:
    container_name: basketapi
    image: basketapi
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "GrpcSettings:DiscountUrl=http://discountgrpc"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "8001:80"

  discountapi:
    container_name: discountapi
    image: discountapi
    build:
      context: .
      dockerfile: src/Services/Discount/Discount.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "8002:80"

  discountgrpc:
    container_name: discountgrpc
    image: discountgrpc
    build:
      context: .
      dockerfile: src/Services/Discount/Discount.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "8003:80"
  
  orderingapi:
    container_name: orderingapi
    image: orderingapi
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SqlServer12345678"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8004:80"
  
  ocelotapigw:
    container_name: ocelotapigw
    image: ocelotapigw
    build:
      context: .
      dockerfile: src/ApiGateways/OcelotApiGw/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
        - catalogapi
        - basketapi
        - discountapi
        - orderingapi
    ports:
      - "8010:80"

  shoppingaggregator:
    container_name: shoppingaggregator
    image: shoppingaggregator
    build:
      context: .
      dockerfile: src/ApiGateways/Shopping.Aggregator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ApiSettings:CatalogUrl=http://catalogapi"
      - "ApiSettings:BasketUrl=http://basketapi"
      - "ApiSettings:OrderingUrl=http://orderingapi"
    depends_on:
      - catalogapi
      - basketapi
      - orderingapi
    ports:
      - "8005:80"

  aspnetrunbasics:
    container_name: aspnetrunbasics
    image: aspnetrunbasics
    build:
      context: .
      dockerfile: src/WebApps/AspnetRunBasics/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ApiSettings:GatewayAddress=http://ocelotapigw"
    depends_on:
        - ocelotapigw
        - catalogapi
        - basketapi
        - discountapi
        - orderingapi
    ports:
        - "8006:80"

volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
